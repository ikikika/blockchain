{"ast":null,"code":"import _regeneratorRuntime from \"/Users/krishnakulkarni/Documents/CodeXpert/GIT_test/Tron_DApp_Advanced/CodeXpert-Tron-DApp-Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/krishnakulkarni/Documents/CodeXpert/GIT_test/Tron_DApp_Advanced/CodeXpert-Tron-DApp-Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/krishnakulkarni/Documents/CodeXpert/GIT_test/Tron_DApp_Advanced/CodeXpert-Tron-DApp-Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/krishnakulkarni/Documents/CodeXpert/GIT_test/Tron_DApp_Advanced/CodeXpert-Tron-DApp-Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/krishnakulkarni/Documents/CodeXpert/GIT_test/Tron_DApp_Advanced/CodeXpert-Tron-DApp-Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/krishnakulkarni/Documents/CodeXpert/GIT_test/Tron_DApp_Advanced/CodeXpert-Tron-DApp-Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/krishnakulkarni/Documents/CodeXpert/GIT_test/Tron_DApp_Advanced/CodeXpert-Tron-DApp-Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/krishnakulkarni/Documents/CodeXpert/GIT_test/Tron_DApp_Advanced/CodeXpert-Tron-DApp-Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/krishnakulkarni/Documents/CodeXpert/GIT_test/Tron_DApp_Advanced/CodeXpert-Tron-DApp-Template/src/components/App/index.js\";\nimport React from 'react';\nimport TronLinkGuide from 'components/TronLinkGuide';\nimport TronWeb from 'tronweb';\nimport Utils from 'utils';\nimport Swal from 'sweetalert2';\nimport './App.scss';\nvar FOUNDATION_ADDRESS = 'TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg';\nvar scores, roundScore, activePlayer, cube, currentClass;\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      balance: 0,\n      getbalanceaddress: '',\n      transferaddress: '',\n      transferamount: '',\n      contractAddress: '',\n      tokenname: '',\n      tokensymbol: '',\n      tronwebaddress: '',\n      totalSupply: '',\n      score0: '',\n      score1: '',\n      tronWeb: {\n        installed: false,\n        loggedIn: false\n      }\n    };\n    _this.updateGetBalanceInputValue = _this.updateGetBalanceInputValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateTransferInputValue = _this.updateTransferInputValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateTransferAmountInputValue = _this.updateTransferAmountInputValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateContractAddressInput = _this.updateContractAddressInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeSide = _this.changeSide.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                });\n                _context.next = 3;\n                return new Promise(function (resolve) {\n                  var tronWebState = {\n                    installed: !!window.tronWeb,\n                    loggedIn: window.tronWeb && window.tronWeb.ready\n                  };\n\n                  if (tronWebState.installed) {\n                    _this2.setState({\n                      tronWeb: tronWebState\n                    });\n\n                    return resolve();\n                  }\n\n                  var tries = 0;\n                  var timer = setInterval(function () {\n                    if (tries >= 10) {\n                      var TRONGRID_API = 'https://api.trongrid.io';\n                      window.tronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n\n                      _this2.setState({\n                        tronWeb: {\n                          installed: false,\n                          loggedIn: false\n                        }\n                      });\n\n                      clearInterval(timer);\n                      return resolve();\n                    }\n\n                    tronWebState.installed = !!window.tronWeb;\n                    tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n                    if (!tronWebState.installed) return tries++;\n\n                    _this2.setState({\n                      tronWeb: tronWebState\n                    });\n\n                    resolve();\n                  }, 100);\n                });\n\n              case 3:\n                if (!this.state.tronWeb.loggedIn) {\n                  // Set default address (foundation address) used for contract calls\n                  // Directly overwrites the address object as TronLink disabled the\n                  // function call\n                  window.tronWeb.defaultAddress = {\n                    hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n                    base58: FOUNDATION_ADDRESS\n                  };\n                  window.tronWeb.on('addressChanged', function () {\n                    if (_this2.state.tronWeb.loggedIn) return;\n\n                    _this2.setState({\n                      tronWeb: {\n                        installed: true,\n                        loggedIn: true\n                      }\n                    });\n                  });\n                } //this.init();\n                //await Utils.setTronWeb(window.tronWeb);\n                //console.log(Utils.tronWeb.address.fromHex((((await Utils.tronWeb.trx.getAccount()).address).toString())));  /////// Get account address and info\n                // console.log(await Utils.tronWeb.trx.getBalance());\n\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }() //init();\n\n  }, {\n    key: \"changeSide\",\n    value: function changeSide() {\n      var dice = Math.floor(Math.random() * 6) + 1;\n      console.log(\"dice : \", dice);\n      var showClass = 'show-' + dice;\n\n      if (currentClass) {\n        cube.classList.remove(currentClass);\n      }\n\n      cube.classList.add(showClass);\n      currentClass = showClass;\n\n      function updateScore() {\n        document.querySelector('.player-controls').classList.remove('disable-controls');\n        document.querySelector('.fa-dice').classList.remove('grey');\n        roundScore += dice;\n        document.querySelector('#score-' + activePlayer).textContent = roundScore;\n\n        if (activePlayer == 0) {\n          this.setState({\n            score0: roundScore\n          });\n        }\n\n        if (activePlayer == 1) {\n          this.setState({\n            score1: roundScore\n          });\n        }\n\n        this.nextPlayer();\n      }\n\n      setTimeout(this.updateScore, 2000);\n    }\n  }, {\n    key: \"roll\",\n    value: function roll() {\n      cube.classList.remove('animation-1');\n      var counter = 0;\n      var loopCount = 30;\n\n      function spinCube() {\n        if (++counter >= loopCount) {\n          clearInterval(interval);\n          cube.classList.remove('animation-2');\n          console.log(\"asdfasdfasdf\");\n        } else {\n          cube.classList.add('animation-2');\n          document.querySelector('.player-controls').classList.add('disable-controls');\n          document.querySelector('.fa-dice').classList.add('grey');\n          console.log(\"QQQQQQQQQQQQ\");\n        }\n      }\n\n      var interval = setInterval(spinCube, 60);\n      this.changeSide();\n      scores[activePlayer] += roundScore;\n      document.querySelector('#score-' + activePlayer).textContent = scores[activePlayer];\n      this.nextPlayer();\n    }\n  }, {\n    key: \"nextPlayer\",\n    value: function nextPlayer() {\n      console.log(\"activePlayer : \", activePlayer);\n      activePlayer === 0 ? activePlayer = 1 : activePlayer = 0;\n      roundScore = 0;\n      document.querySelector('.player-0-panel').classList.toggle('active');\n      document.querySelector('.player-1-panel').classList.toggle('active');\n      document.querySelector('.player-controls').classList.toggle('player-controls-right');\n      document.querySelector('.fa-dice').classList.toggle('fa-flip-horizontal');\n    } //document.querySelector('.btn-new').addEventListener('click', init);\n\n  }, {\n    key: \"init\",\n    value: function init() {\n      console.log(\"init()\");\n      scores = [0, 0];\n      roundScore = 0;\n      activePlayer = 0;\n      cube = document.querySelector('.cube');\n      currentClass = '';\n      this.setState({\n        score0: 0\n      });\n      document.getElementById('score-1').textContent = '0';\n      document.getElementById('name-0').textContent = 'Player1';\n      document.getElementById('name-1').textContent = 'Player2';\n      document.querySelector('.player-0-panel').classList.remove('winner');\n      document.querySelector('.player-1-panel').classList.remove('winner');\n      document.querySelector('.player-0-panel').classList.remove('active');\n      document.querySelector('.player-1-panel').classList.remove('active');\n      document.querySelector('.player-0-panel').classList.add('active');\n      document.querySelector('.player-controls').classList.remove('player-controls-right');\n      document.querySelector('.fa-dice').classList.remove('fa-flip-horizontal');\n      document.querySelector('.dice').classList.remove('displaynone');\n      document.querySelector('.player-controls').classList.remove('displaynone');\n      cube.classList.add('animation-1');\n    } ///////////////////////////////// DYNAMIC CONTRACT ADDRESS /////////////////////////\n\n  }, {\n    key: \"updateContractAddressInput\",\n    value: function () {\n      var _updateContractAddressInput = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(evt) {\n        var tmp_tronwebaddress;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.setState({\n                  contractAddress: evt.target.value\n                });\n\n              case 2:\n                console.log('contractAddress : ', this.state.contractAddress);\n                _context2.next = 5;\n                return Utils.setTronWeb(window.tronWeb, this.state.contractAddress);\n\n              case 5:\n                _context2.t0 = Utils.tronWeb.address;\n                _context2.next = 8;\n                return Utils.tronWeb.trx.getAccount();\n\n              case 8:\n                _context2.t1 = _context2.sent.address.toString();\n                tmp_tronwebaddress = _context2.t0.fromHex.call(_context2.t0, _context2.t1);\n                _context2.t2 = this;\n                _context2.next = 13;\n                return Utils.contract.name().call();\n\n              case 13:\n                _context2.t3 = _context2.sent;\n                _context2.next = 16;\n                return Utils.contract.symbol().call();\n\n              case 16:\n                _context2.t4 = _context2.sent;\n                _context2.next = 19;\n                return Utils.contract.totalSupply().call();\n\n              case 19:\n                _context2.t5 = _context2.sent.toNumber();\n                _context2.t6 = _context2.t5 / 100000000;\n                _context2.t7 = tmp_tronwebaddress;\n                _context2.t8 = {\n                  tokenname: _context2.t3,\n                  tokensymbol: _context2.t4,\n                  totalSupply: _context2.t6,\n                  tronwebaddress: _context2.t7\n                };\n                _context2.next = 25;\n                return _context2.t2.setState.call(_context2.t2, _context2.t8);\n\n              case 25:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function updateContractAddressInput(_x) {\n        return _updateContractAddressInput.apply(this, arguments);\n      };\n    }() ///////////////////////////////// DYNAMIC CONTRACT ADDRESS END /////////////////////////\n    /////////////////////////////////////// GET BALANCE /////////////////////////////////\n\n  }, {\n    key: \"getBalance\",\n    value: function () {\n      var _getBalance = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(_getbalanceaddress) {\n        var balance;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Utils.contract.balanceOf(_getbalanceaddress).call();\n\n              case 2:\n                _context3.t0 = _context3.sent.toNumber();\n                balance = _context3.t0 / 100000000;\n                //const balance = await Utils.contract.decimals().call();\n                console.log('balance', balance);\n                this.setState({\n                  balance: balance\n                });\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function getBalance(_x2) {\n        return _getBalance.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"updateGetBalanceInputValue\",\n    value: function updateGetBalanceInputValue(evt) {\n      console.log('getbalanceaddress : ', this.state.getbalanceaddress);\n      this.setState({\n        getbalanceaddress: evt.target.value\n      });\n    } /////////////////////////////////////// GET BALANCE END /////////////////////////////////\n    /////////////////////////////////// TRANSFER /////////////////////////////\n\n  }, {\n    key: \"Transfer\",\n    value: function Transfer(_to, _amount) {\n      Utils.contract.transfer(_to, _amount).send({\n        shouldPollResponse: true,\n        callValue: 0\n      }).then(function (res) {\n        return Swal({\n          title: 'Transfer Successful',\n          type: 'success'\n        });\n      }).catch(function (err) {\n        return Swal({\n          title: 'Transfer Failed',\n          type: 'error'\n        });\n      });\n    }\n  }, {\n    key: \"updateTransferInputValue\",\n    value: function updateTransferInputValue(evt) {\n      this.setState({\n        transferaddress: evt.target.value\n      });\n      console.log('transferaddress : ', this.state.transferaddress);\n    }\n  }, {\n    key: \"updateTransferAmountInputValue\",\n    value: function updateTransferAmountInputValue(evt) {\n      console.log('transferamount : ', this.state.transferamount);\n      this.setState({\n        transferamount: evt.target.value\n      });\n    } /////////////////////////////////// TRANSFER END /////////////////////////////\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (!this.state.tronWeb.installed) return React.createElement(TronLinkGuide, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      });\n      if (!this.state.tronWeb.loggedIn) return React.createElement(TronLinkGuide, {\n        installed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: 'CodeXpert.png',\n        width: \"200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        style: {\n          color: 'white',\n          backgroundColor: 'white',\n          height: 0.5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \"TRC10 TOKEN DICE GAME\"), React.createElement(\"hr\", {\n        style: {\n          color: 'white',\n          backgroundColor: 'white',\n          height: 0.5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, \" Your Address : \", this.state.tronwebaddress, \" \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, \" Paste your contract address here : \"), React.createElement(\"input\", {\n        style: {\n          width: \"400px\"\n        },\n        value: this.state.contractAddress,\n        onChange: this.updateContractAddressInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \" Token name : \", this.state.tokenname), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \" Token Symbol : \", this.state.tokensymbol), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \" Total Supply : \", this.state.totalSupply), React.createElement(\"hr\", {\n        style: {\n          color: 'white',\n          backgroundColor: 'white',\n          height: 0.5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        style: {\n          width: \"400px\"\n        },\n        value: this.state.getbalanceaddress,\n        onChange: this.updateGetBalanceInputValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this3.getBalance(_this3.state.getbalanceaddress);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, \"Get Balance\"), React.createElement(\"hr\", {\n        style: {\n          color: 'white',\n          backgroundColor: 'white',\n          height: 0.5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn-new\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this3.init();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, \"Start New game \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"grid-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"player-0-panel active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"player-name\",\n        id: \"name-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, \"Player 1\"), React.createElement(\"div\", {\n        className: \"player-score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, this.state.score0), React.createElement(\"div\", {\n        className: \"player-controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn-roll\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this3.roll();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-dice fa-3x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"player-1-panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"player-name\",\n        id: \"name-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, \"Player 2\"), React.createElement(\"div\", {\n        className: \"player-score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, this.state.score1))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/krishnakulkarni/Documents/CodeXpert/GIT_test/Tron_DApp_Advanced/CodeXpert-Tron-DApp-Template/src/components/App/index.js"],"names":["React","TronLinkGuide","TronWeb","Utils","Swal","FOUNDATION_ADDRESS","scores","roundScore","activePlayer","cube","currentClass","App","props","state","balance","getbalanceaddress","transferaddress","transferamount","contractAddress","tokenname","tokensymbol","tronwebaddress","totalSupply","score0","score1","tronWeb","installed","loggedIn","updateGetBalanceInputValue","bind","updateTransferInputValue","updateTransferAmountInputValue","updateContractAddressInput","changeSide","setState","loading","Promise","resolve","tronWebState","window","ready","tries","timer","setInterval","TRONGRID_API","clearInterval","defaultAddress","hex","address","toHex","base58","on","dice","Math","floor","random","console","log","showClass","classList","remove","add","updateScore","document","querySelector","textContent","nextPlayer","setTimeout","counter","loopCount","spinCube","interval","toggle","getElementById","evt","target","value","setTronWeb","trx","getAccount","toString","tmp_tronwebaddress","fromHex","contract","name","call","symbol","toNumber","_getbalanceaddress","balanceOf","_to","_amount","transfer","send","shouldPollResponse","callValue","then","res","title","type","catch","err","color","backgroundColor","height","width","event","preventDefault","getBalance","init","roll","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAO,YAAP;AAEA,IAAMC,kBAAkB,GAAG,oCAA3B;AACI,IAAIC,MAAJ,EAAYC,UAAZ,EAAwBC,YAAxB,EAAsCC,IAAtC,EAA4CC,YAA5C;;IAEEC,G;;;;;AAEF,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,CADA;AAETC,MAAAA,iBAAiB,EAAE,EAFV;AAGTC,MAAAA,eAAe,EAAE,EAHR;AAITC,MAAAA,cAAc,EAAE,EAJP;AAKTC,MAAAA,eAAe,EAAC,EALP;AAMTC,MAAAA,SAAS,EAAC,EAND;AAOTC,MAAAA,WAAW,EAAC,EAPH;AAQTC,MAAAA,cAAc,EAAC,EARN;AASTC,MAAAA,WAAW,EAAC,EATH;AAUTC,MAAAA,MAAM,EAAC,EAVE;AAWTC,MAAAA,MAAM,EAAC,EAXE;AAaPC,MAAAA,OAAO,EAAE;AACLC,QAAAA,SAAS,EAAE,KADN;AAELC,QAAAA,QAAQ,EAAE;AAFL;AAbF,KAAb;AAkBA,UAAKC,0BAAL,GAAkC,MAAKA,0BAAL,CAAgCC,IAAhC,uDAAlC;AACA,UAAKC,wBAAL,GAAgC,MAAKA,wBAAL,CAA8BD,IAA9B,uDAAhC;AACA,UAAKE,8BAAL,GAAsC,MAAKA,8BAAL,CAAoCF,IAApC,uDAAtC;AACA,UAAKG,0BAAL,GAAkC,MAAKA,0BAAL,CAAgCH,IAAhC,uDAAlC;AACA,UAAKI,UAAL,GAAkB,MAAKA,UAAL,CAAgBJ,IAAhB,uDAAlB;AAxBe;AA0BlB;;;;;;;;;;;;;;AAIG,qBAAKK,QAAL,CAAc;AAACC,kBAAAA,OAAO,EAAC;AAAT,iBAAd;;uBACM,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AACzB,sBAAMC,YAAY,GAAG;AACjBZ,oBAAAA,SAAS,EAAE,CAAC,CAACa,MAAM,CAACd,OADH;AAEjBE,oBAAAA,QAAQ,EAAEY,MAAM,CAACd,OAAP,IAAkBc,MAAM,CAACd,OAAP,CAAee;AAF1B,mBAArB;;AAKA,sBAAGF,YAAY,CAACZ,SAAhB,EAA2B;AACvB,oBAAA,MAAI,CAACQ,QAAL,CAAc;AACVT,sBAAAA,OAAO,EACPa;AAFU,qBAAd;;AAKA,2BAAOD,OAAO,EAAd;AACH;;AAED,sBAAII,KAAK,GAAG,CAAZ;AAEA,sBAAMC,KAAK,GAAGC,WAAW,CAAC,YAAM;AAC5B,wBAAGF,KAAK,IAAI,EAAZ,EAAgB;AACZ,0BAAMG,YAAY,GAAG,yBAArB;AAEAL,sBAAAA,MAAM,CAACd,OAAP,GAAiB,IAAIvB,OAAJ,CACb0C,YADa,EAEbA,YAFa,EAGbA,YAHa,CAAjB;;AAMA,sBAAA,MAAI,CAACV,QAAL,CAAc;AACVT,wBAAAA,OAAO,EAAE;AACLC,0BAAAA,SAAS,EAAE,KADN;AAELC,0BAAAA,QAAQ,EAAE;AAFL;AADC,uBAAd;;AAOAkB,sBAAAA,aAAa,CAACH,KAAD,CAAb;AACA,6BAAOL,OAAO,EAAd;AACH;;AAEDC,oBAAAA,YAAY,CAACZ,SAAb,GAAyB,CAAC,CAACa,MAAM,CAACd,OAAlC;AACAa,oBAAAA,YAAY,CAACX,QAAb,GAAwBY,MAAM,CAACd,OAAP,IAAkBc,MAAM,CAACd,OAAP,CAAee,KAAzD;AAEA,wBAAG,CAACF,YAAY,CAACZ,SAAjB,EACI,OAAOe,KAAK,EAAZ;;AAEJ,oBAAA,MAAI,CAACP,QAAL,CAAc;AACVT,sBAAAA,OAAO,EAAEa;AADC,qBAAd;;AAIAD,oBAAAA,OAAO;AACV,mBAhCwB,EAgCtB,GAhCsB,CAAzB;AAiCH,iBAlDK,C;;;AAoDN,oBAAG,CAAC,KAAKxB,KAAL,CAAWY,OAAX,CAAmBE,QAAvB,EAAiC;AAC7B;AACA;AACA;AACAY,kBAAAA,MAAM,CAACd,OAAP,CAAeqB,cAAf,GAAgC;AAC5BC,oBAAAA,GAAG,EAAER,MAAM,CAACd,OAAP,CAAeuB,OAAf,CAAuBC,KAAvB,CAA6B5C,kBAA7B,CADuB;AAE5B6C,oBAAAA,MAAM,EAAE7C;AAFoB,mBAAhC;AAKAkC,kBAAAA,MAAM,CAACd,OAAP,CAAe0B,EAAf,CAAkB,gBAAlB,EAAoC,YAAM;AACtC,wBAAG,MAAI,CAACtC,KAAL,CAAWY,OAAX,CAAmBE,QAAtB,EACI;;AAEJ,oBAAA,MAAI,CAACO,QAAL,CAAc;AACVT,sBAAAA,OAAO,EAAE;AACLC,wBAAAA,SAAS,EAAE,IADN;AAELC,wBAAAA,QAAQ,EAAE;AAFL;AADC,qBAAd;AAMH,mBAVD;AAWH,iB,CAED;AAGA;AACA;AACD;;;;;;;;;;;;;;QAOH;;;;iCAEa;AACX,UAAIyB,IAAI,GAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,CAAzB,IAA4B,CAAxC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBL,IAAvB;AACA,UAAIM,SAAS,GAAG,UAAUN,IAA1B;;AACA,UAAI1C,YAAJ,EAAkB;AAChBD,QAAAA,IAAI,CAACkD,SAAL,CAAeC,MAAf,CAAsBlD,YAAtB;AACD;;AACDD,MAAAA,IAAI,CAACkD,SAAL,CAAeE,GAAf,CAAmBH,SAAnB;AACAhD,MAAAA,YAAY,GAAGgD,SAAf;;AACA,eAASI,WAAT,GAAuB;AACvBC,QAAAA,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,EAA2CL,SAA3C,CAAqDC,MAArD,CAA4D,kBAA5D;AACAG,QAAAA,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCL,SAAnC,CAA6CC,MAA7C,CAAoD,MAApD;AAEArD,QAAAA,UAAU,IAAI6C,IAAd;AACAW,QAAAA,QAAQ,CAACC,aAAT,CAAuB,YAAYxD,YAAnC,EAAiDyD,WAAjD,GAA+D1D,UAA/D;;AAEA,YAAGC,YAAY,IAAI,CAAnB,EAAqB;AACjB,eAAK0B,QAAL,CAAc;AACZX,YAAAA,MAAM,EAAGhB;AADG,WAAd;AAGH;;AAED,YAAGC,YAAY,IAAI,CAAnB,EAAqB;AACjB,eAAK0B,QAAL,CAAc;AACZV,YAAAA,MAAM,EAAGjB;AADG,WAAd;AAGH;;AAED,aAAK2D,UAAL;AAEC;;AAEDC,MAAAA,UAAU,CAAC,KAAKL,WAAN,EAAmB,IAAnB,CAAV;AAGD;;;2BAEM;AACLrD,MAAAA,IAAI,CAACkD,SAAL,CAAeC,MAAf,CAAsB,aAAtB;AACA,UAAIQ,OAAO,GAAG,CAAd;AACA,UAAIC,SAAS,GAAG,EAAhB;;AACA,eAASC,QAAT,GAAoB;AAClB,YAAI,EAAEF,OAAF,IAAaC,SAAjB,EAA4B;AACxBxB,UAAAA,aAAa,CAAC0B,QAAD,CAAb;AACA9D,UAAAA,IAAI,CAACkD,SAAL,CAAeC,MAAf,CAAsB,aAAtB;AACAJ,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,SAJD,MAIO;AACHhD,UAAAA,IAAI,CAACkD,SAAL,CAAeE,GAAf,CAAmB,aAAnB;AACAE,UAAAA,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,EAA2CL,SAA3C,CAAqDE,GAArD,CAAyD,kBAAzD;AACAE,UAAAA,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCL,SAAnC,CAA6CE,GAA7C,CAAiD,MAAjD;AACAL,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEH;AACF;;AACD,UAAIc,QAAQ,GAAG5B,WAAW,CAAC2B,QAAD,EAAW,EAAX,CAA1B;AACA,WAAKrC,UAAL;AAEA3B,MAAAA,MAAM,CAACE,YAAD,CAAN,IAAwBD,UAAxB;AACAwD,MAAAA,QAAQ,CAACC,aAAT,CAAuB,YAAYxD,YAAnC,EAAiDyD,WAAjD,GAA+D3D,MAAM,CAACE,YAAD,CAArE;AACE,WAAK0D,UAAL;AAEH;;;iCAEY;AACXV,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BjD,YAA/B;AACAA,MAAAA,YAAY,KAAK,CAAjB,GAAqBA,YAAY,GAAG,CAApC,GAAwCA,YAAY,GAAG,CAAvD;AACAD,MAAAA,UAAU,GAAG,CAAb;AACAwD,MAAAA,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,EAA0CL,SAA1C,CAAoDa,MAApD,CAA2D,QAA3D;AACAT,MAAAA,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,EAA0CL,SAA1C,CAAoDa,MAApD,CAA2D,QAA3D;AACAT,MAAAA,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,EAA2CL,SAA3C,CAAqDa,MAArD,CAA4D,uBAA5D;AACAT,MAAAA,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCL,SAAnC,CAA6Ca,MAA7C,CAAoD,oBAApD;AACD,K,CAED;;;;2BAEO;AACPhB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACEnD,MAAAA,MAAM,GAAG,CAAC,CAAD,EAAG,CAAH,CAAT;AACAC,MAAAA,UAAU,GAAG,CAAb;AACAC,MAAAA,YAAY,GAAG,CAAf;AACAC,MAAAA,IAAI,GAAGsD,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAP;AACAtD,MAAAA,YAAY,GAAG,EAAf;AAEA,WAAKwB,QAAL,CAAc;AAACX,QAAAA,MAAM,EAAE;AAAT,OAAd;AACAwC,MAAAA,QAAQ,CAACU,cAAT,CAAwB,SAAxB,EAAmCR,WAAnC,GAAiD,GAAjD;AACAF,MAAAA,QAAQ,CAACU,cAAT,CAAwB,QAAxB,EAAkCR,WAAlC,GAAgD,SAAhD;AACAF,MAAAA,QAAQ,CAACU,cAAT,CAAwB,QAAxB,EAAkCR,WAAlC,GAAgD,SAAhD;AACAF,MAAAA,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,EAA0CL,SAA1C,CAAoDC,MAApD,CAA2D,QAA3D;AACAG,MAAAA,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,EAA0CL,SAA1C,CAAoDC,MAApD,CAA2D,QAA3D;AACAG,MAAAA,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,EAA0CL,SAA1C,CAAoDC,MAApD,CAA2D,QAA3D;AACAG,MAAAA,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,EAA0CL,SAA1C,CAAoDC,MAApD,CAA2D,QAA3D;AACAG,MAAAA,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,EAA0CL,SAA1C,CAAoDE,GAApD,CAAwD,QAAxD;AACAE,MAAAA,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,EAA2CL,SAA3C,CAAqDC,MAArD,CAA4D,uBAA5D;AACAG,MAAAA,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCL,SAAnC,CAA6CC,MAA7C,CAAoD,oBAApD;AACAG,MAAAA,QAAQ,CAACC,aAAT,CAAuB,OAAvB,EAAgCL,SAAhC,CAA0CC,MAA1C,CAAiD,aAAjD;AACAG,MAAAA,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,EAA2CL,SAA3C,CAAqDC,MAArD,CAA4D,aAA5D;AACAnD,MAAAA,IAAI,CAACkD,SAAL,CAAeE,GAAf,CAAmB,aAAnB;AACD,K,CAID;;;;;;;iDACkCa,G;;;;;;;uBACpB,KAAKxC,QAAL,CAAc;AAClBhB,kBAAAA,eAAe,EAAEwD,GAAG,CAACC,MAAJ,CAAWC;AADV,iBAAd,C;;;AAGNpB,gBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAK5C,KAAL,CAAWK,eAA7C;;uBACMf,KAAK,CAAC0E,UAAN,CAAiBtC,MAAM,CAACd,OAAxB,EAAiC,KAAKZ,KAAL,CAAWK,eAA5C,C;;;+BAEqBf,KAAK,CAACsB,OAAN,CAAcuB,O;;uBAAyB7C,KAAK,CAACsB,OAAN,CAAcqD,GAAd,CAAkBC,UAAlB,E;;;8CAAgC/B,O,CAASgC,Q;AAArGC,gBAAAA,kB,gBAA2CC,O;+BAC3C,I;;uBACc/E,KAAK,CAACgF,QAAN,CAAeC,IAAf,GAAsBC,IAAtB,E;;;;;uBACElF,KAAK,CAACgF,QAAN,CAAeG,MAAf,GAAwBD,IAAxB,E;;;;;uBACElF,KAAK,CAACgF,QAAN,CAAe7D,WAAf,GAA6B+D,IAA7B,E;;;8CAAqCE,Q;8CAAY,S;+BACxDN,kB;;AAHf9D,kBAAAA,S;AACAC,kBAAAA,W;AACAE,kBAAAA,W;AACAD,kBAAAA,c;;;oCAJSa,Q;;;;;;;;;;;;;QAQnB;AAEA;;;;;;;iDACiBsD,kB;;;;;;;uBACWrF,KAAK,CAACgF,QAAN,CAAeM,SAAf,CAAyBD,kBAAzB,EAA6CH,IAA7C,E;;;8CAAqDE,Q;AAAvEzE,gBAAAA,O,kBAAmF,S;AACzF;AACA0C,gBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB3C,OAAvB;AAEI,qBAAKoB,QAAL,CAAc;AAACpB,kBAAAA,OAAO,EAACA;AAAT,iBAAd;;;;;;;;;;;;;;;;+CAGoB4D,G,EAAK;AAC7BlB,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC,KAAK5C,KAAL,CAAWE,iBAA/C;AACI,WAAKmB,QAAL,CAAc;AACZnB,QAAAA,iBAAiB,EAAE2D,GAAG,CAACC,MAAJ,CAAWC;AADlB,OAAd;AAGP,K,CACD;AAEA;;;;6BACSc,G,EAAKC,O,EAAQ;AAElBxF,MAAAA,KAAK,CAACgF,QAAN,CAAeS,QAAf,CAAwBF,GAAxB,EAA6BC,OAA7B,EAAsCE,IAAtC,CAA2C;AACvCC,QAAAA,kBAAkB,EAAE,IADmB;AAEvCC,QAAAA,SAAS,EAAE;AAF4B,OAA3C,EAGGC,IAHH,CAGQ,UAAAC,GAAG;AAAA,eAAI7F,IAAI,CAAC;AAChB8F,UAAAA,KAAK,EAAC,qBADU;AAEhBC,UAAAA,IAAI,EAAE;AAFU,SAAD,CAAR;AAAA,OAHX,EAMIC,KANJ,CAMU,UAAAC,GAAG;AAAA,eAAIjG,IAAI,CAAC;AAClB8F,UAAAA,KAAK,EAAC,iBADY;AAElBC,UAAAA,IAAI,EAAE;AAFY,SAAD,CAAR;AAAA,OANb;AAYH;;;6CAEyBzB,G,EAAK;AAC3B,WAAKxC,QAAL,CAAc;AACZlB,QAAAA,eAAe,EAAE0D,GAAG,CAACC,MAAJ,CAAWC;AADhB,OAAd;AAGJpB,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAK5C,KAAL,CAAWG,eAA7C;AAEC;;;mDAE+B0D,G,EAAK;AACjClB,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAK5C,KAAL,CAAWI,cAA5C;AACI,WAAKiB,QAAL,CAAc;AACZjB,QAAAA,cAAc,EAAEyD,GAAG,CAACC,MAAJ,CAAWC;AADf,OAAd;AAGP,K,CACD;;;;6BAES;AAAA;;AACL,UAAG,CAAC,KAAK/D,KAAL,CAAWY,OAAX,CAAmBC,SAAvB,EACI,OAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAEJ,UAAG,CAAC,KAAKb,KAAL,CAAWY,OAAX,CAAmBE,QAAvB,EACI,OAAO,oBAAC,aAAD;AAAe,QAAA,SAAS,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAEJ,aACM;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAE,eAAV;AAA2B,QAAA,KAAK,EAAC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAHN,EAME;AAAI,QAAA,KAAK,EAAE;AAAC2E,UAAAA,KAAK,EAAE,OAAR;AAAiBC,UAAAA,eAAe,EAAE,OAAlC;AAA2CC,UAAAA,MAAM,EAAE;AAAnD,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAQE;AAAI,QAAA,KAAK,EAAE;AAACF,UAAAA,KAAK,EAAG;AAAT,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCARF,EASE;AAAI,QAAA,KAAK,EAAE;AAACA,UAAAA,KAAK,EAAE,OAAR;AAAiBC,UAAAA,eAAe,EAAE,OAAlC;AAA2CC,UAAAA,MAAM,EAAE;AAAnD,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAoB,KAAK3F,KAAL,CAAWQ,cAA/B,MAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAbF,EAcE;AAAO,QAAA,KAAK,EAAE;AAAEoF,UAAAA,KAAK,EAAC;AAAR,SAAd;AAAiC,QAAA,KAAK,EAAE,KAAK5F,KAAL,CAAWK,eAAnD;AAAoE,QAAA,QAAQ,EAAE,KAAKc,0BAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAkB,KAAKnB,KAAL,CAAWM,SAA7B,CAhBF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAoB,KAAKN,KAAL,CAAWO,WAA/B,CAjBF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAoB,KAAKP,KAAL,CAAWS,WAA/B,CAlBF,EAmBE;AAAI,QAAA,KAAK,EAAE;AAACgF,UAAAA,KAAK,EAAE,OAAR;AAAiBC,UAAAA,eAAe,EAAE,OAAlC;AAA2CC,UAAAA,MAAM,EAAE;AAAnD,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,EAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBF,EAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBF,EAuBE;AAAO,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAC;AAAR,SAAd;AAAiC,QAAA,KAAK,EAAE,KAAK5F,KAAL,CAAWE,iBAAnD;AAAsE,QAAA,QAAQ,EAAE,KAAKa,0BAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvBF,EAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxBF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzBF,EA0BE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,iBAAC8E,KAAD,EAAW;AACHA,UAAAA,KAAK,CAACC,cAAN;;AACA,UAAA,MAAI,CAACC,UAAL,CAAgB,MAAI,CAAC/F,KAAL,CAAWE,iBAA3B;AACD,SAHpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA1BF,EA+BE;AAAI,QAAA,KAAK,EAAE;AAACuF,UAAAA,KAAK,EAAE,OAAR;AAAiBC,UAAAA,eAAe,EAAE,OAAlC;AAA2CC,UAAAA,MAAM,EAAE;AAAnD,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/BF,EA6ChB;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAA4B,QAAA,OAAO,EAAE,iBAACE,KAAD,EAAW;AAACA,UAAAA,KAAK,CAACC,cAAN;;AACO,UAAA,MAAI,CAACE,IAAL;AAAY,SADpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BA7CgB,EAgDV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhDU,EAiDV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjDU,EAmDV;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,EAAE,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgC,KAAKhG,KAAL,CAAWU,MAA3C,CAFF,EAGE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAA6B,QAAA,OAAO,EAAE,iBAACmF,KAAD,EAAW;AAACA,UAAAA,KAAK,CAACC,cAAN;;AACI,UAAA,MAAI,CAACG,IAAL;AAAY,SADlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACsE;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADtE,CAFF,CAHF,CADF,EAWE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,EAAE,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B,KAAKjG,KAAL,CAAWW,MAA1C,CAFF,CAXF,CAnDU,EAgFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhFF,EAiFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjFF,CADF,CADN;AAuFH;;;;EAjYaxB,KAAK,CAAC+G,S;;AAoYxB,eAAepG,GAAf","sourcesContent":["import React from 'react';\nimport TronLinkGuide from 'components/TronLinkGuide';\nimport TronWeb from 'tronweb';\nimport Utils from 'utils';\nimport Swal from 'sweetalert2';\n\nimport './App.scss';\n\nconst FOUNDATION_ADDRESS = 'TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg';\n    var scores, roundScore, activePlayer, cube, currentClass;\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            balance: 0,\n            getbalanceaddress: '',\n            transferaddress: '',\n            transferamount: '',\n            contractAddress:'',\n            tokenname:'',\n            tokensymbol:'',\n            tronwebaddress:'',\n            totalSupply:'',\n            score0:'',\n            score1:'',\n\n              tronWeb: {\n                  installed: false,\n                  loggedIn: false\n              },\n            }\n        this.updateGetBalanceInputValue = this.updateGetBalanceInputValue.bind(this)\n        this.updateTransferInputValue = this.updateTransferInputValue.bind(this)\n        this.updateTransferAmountInputValue = this.updateTransferAmountInputValue.bind(this)\n        this.updateContractAddressInput = this.updateContractAddressInput.bind(this)\n        this.changeSide = this.changeSide.bind(this)\n\n    }\n\n    async componentDidMount() {\n\n        this.setState({loading:true})\n        await new Promise(resolve => {\n            const tronWebState = {\n                installed: !!window.tronWeb,\n                loggedIn: window.tronWeb && window.tronWeb.ready\n            };\n\n            if(tronWebState.installed) {\n                this.setState({\n                    tronWeb:\n                    tronWebState\n                });\n\n                return resolve();\n            }\n\n            let tries = 0;\n\n            const timer = setInterval(() => {\n                if(tries >= 10) {\n                    const TRONGRID_API = 'https://api.trongrid.io';\n\n                    window.tronWeb = new TronWeb(\n                        TRONGRID_API,\n                        TRONGRID_API,\n                        TRONGRID_API\n                    );\n\n                    this.setState({\n                        tronWeb: {\n                            installed: false,\n                            loggedIn: false\n                        }\n                    });\n\n                    clearInterval(timer);\n                    return resolve();\n                }\n\n                tronWebState.installed = !!window.tronWeb;\n                tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n                if(!tronWebState.installed)\n                    return tries++;\n\n                this.setState({\n                    tronWeb: tronWebState\n                });\n\n                resolve();\n            }, 100);\n        });\n\n        if(!this.state.tronWeb.loggedIn) {\n            // Set default address (foundation address) used for contract calls\n            // Directly overwrites the address object as TronLink disabled the\n            // function call\n            window.tronWeb.defaultAddress = {\n                hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n                base58: FOUNDATION_ADDRESS\n            };\n\n            window.tronWeb.on('addressChanged', () => {\n                if(this.state.tronWeb.loggedIn)\n                    return;\n\n                this.setState({\n                    tronWeb: {\n                        installed: true,\n                        loggedIn: true\n                    }\n                });\n            });\n        }\n\n        //this.init();\n\n\n        //await Utils.setTronWeb(window.tronWeb);\n        //console.log(Utils.tronWeb.address.fromHex((((await Utils.tronWeb.trx.getAccount()).address).toString())));  /////// Get account address and info\n       // console.log(await Utils.tronWeb.trx.getBalance());\n    }\n\n\n\n\n\n    //init();\n\n    changeSide() {\n      var dice = (Math.floor(Math.random()*6)+1);\n      console.log(\"dice : \", dice);\n      var showClass = 'show-' + dice;\n      if (currentClass) {\n        cube.classList.remove(currentClass);\n      }\n      cube.classList.add(showClass);\n      currentClass = showClass;\n      function updateScore() {\n      document.querySelector('.player-controls').classList.remove('disable-controls');\n      document.querySelector('.fa-dice').classList.remove('grey');\n\n      roundScore += dice;\n      document.querySelector('#score-' + activePlayer).textContent = roundScore;\n\n      if(activePlayer == 0){\n          this.setState({\n            score0 : roundScore\n          });\n      }\n\n      if(activePlayer == 1){\n          this.setState({\n            score1 : roundScore\n          });\n      }\n\n      this.nextPlayer();\n\n      }\n\n      setTimeout(this.updateScore, 2000);\n\n\n    }\n\n    roll() {\n      cube.classList.remove('animation-1');\n      var counter = 0;\n      var loopCount = 30;\n      function spinCube() {\n        if (++counter >= loopCount) {\n            clearInterval(interval);\n            cube.classList.remove('animation-2');\n            console.log(\"asdfasdfasdf\");\n        } else {\n            cube.classList.add('animation-2');\n            document.querySelector('.player-controls').classList.add('disable-controls');\n            document.querySelector('.fa-dice').classList.add('grey');\n            console.log(\"QQQQQQQQQQQQ\");\n\n        }\n      }\n      var interval = setInterval(spinCube, 60);\n      this.changeSide();\n\n      scores[activePlayer] += roundScore;\n      document.querySelector('#score-' + activePlayer).textContent = scores[activePlayer];\n        this.nextPlayer();\n\n    };\n\n    nextPlayer() {\n      console.log(\"activePlayer : \", activePlayer);\n      activePlayer === 0 ? activePlayer = 1 : activePlayer = 0;\n      roundScore = 0;\n      document.querySelector('.player-0-panel').classList.toggle('active');\n      document.querySelector('.player-1-panel').classList.toggle('active');\n      document.querySelector('.player-controls').classList.toggle('player-controls-right');\n      document.querySelector('.fa-dice').classList.toggle('fa-flip-horizontal');\n    }\n\n    //document.querySelector('.btn-new').addEventListener('click', init);\n\n    init() {\n    console.log(\"init()\");\n      scores = [0,0];\n      roundScore = 0;\n      activePlayer = 0;\n      cube = document.querySelector('.cube');\n      currentClass = '';\n\n      this.setState({score0: 0});\n      document.getElementById('score-1').textContent = '0';\n      document.getElementById('name-0').textContent = 'Player1';\n      document.getElementById('name-1').textContent = 'Player2';\n      document.querySelector('.player-0-panel').classList.remove('winner');\n      document.querySelector('.player-1-panel').classList.remove('winner');\n      document.querySelector('.player-0-panel').classList.remove('active');\n      document.querySelector('.player-1-panel').classList.remove('active');\n      document.querySelector('.player-0-panel').classList.add('active');\n      document.querySelector('.player-controls').classList.remove('player-controls-right');\n      document.querySelector('.fa-dice').classList.remove('fa-flip-horizontal');\n      document.querySelector('.dice').classList.remove('displaynone');\n      document.querySelector('.player-controls').classList.remove('displaynone');\n      cube.classList.add('animation-1');\n    }\n\n\n\n    ///////////////////////////////// DYNAMIC CONTRACT ADDRESS /////////////////////////\n    async updateContractAddressInput (evt) {\n            await this.setState({\n              contractAddress: evt.target.value\n            });\n            console.log('contractAddress : ', this.state.contractAddress);\n            await Utils.setTronWeb(window.tronWeb, this.state.contractAddress);\n            //const tmp_name = await Utils.contract.name().call();\n            const tmp_tronwebaddress = Utils.tronWeb.address.fromHex((((await Utils.tronWeb.trx.getAccount()).address).toString()))\n            await this.setState({\n              tokenname : await Utils.contract.name().call(),\n              tokensymbol : await Utils.contract.symbol().call(),\n              totalSupply : ((await Utils.contract.totalSupply().call()).toNumber())/100000000,\n              tronwebaddress:tmp_tronwebaddress\n            });\n\n    }\n    ///////////////////////////////// DYNAMIC CONTRACT ADDRESS END /////////////////////////\n\n    /////////////////////////////////////// GET BALANCE /////////////////////////////////\n    async getBalance(_getbalanceaddress){\n        const balance = ((await Utils.contract.balanceOf(_getbalanceaddress).call()).toNumber())/100000000;\n        //const balance = await Utils.contract.decimals().call();\n        console.log('balance', balance);\n\n            this.setState({balance:balance})\n\n    }\n    updateGetBalanceInputValue (evt) {\n        console.log('getbalanceaddress : ', this.state.getbalanceaddress);\n            this.setState({\n              getbalanceaddress: evt.target.value\n            });\n    }\n    /////////////////////////////////////// GET BALANCE END /////////////////////////////////\n\n    /////////////////////////////////// TRANSFER /////////////////////////////\n    Transfer(_to, _amount){\n\n        Utils.contract.transfer(_to, _amount).send({\n            shouldPollResponse: true,\n            callValue: 0\n        }).then(res => Swal({\n            title:'Transfer Successful',\n            type: 'success'\n        })).catch(err => Swal({\n            title:'Transfer Failed',\n            type: 'error'\n\n        }));\n\n    }\n\n    updateTransferInputValue (evt) {\n        this.setState({\n          transferaddress: evt.target.value\n        });\n    console.log('transferaddress : ', this.state.transferaddress);\n\n    }\n\n    updateTransferAmountInputValue (evt) {\n        console.log('transferamount : ', this.state.transferamount);\n            this.setState({\n              transferamount: evt.target.value\n            });\n    }\n    /////////////////////////////////// TRANSFER END /////////////////////////////\n\n    render() {\n        if(!this.state.tronWeb.installed)\n            return <TronLinkGuide />;\n\n        if(!this.state.tronWeb.loggedIn)\n            return <TronLinkGuide installed />;\n\n        return (\n              <div className='row'>\n                <div className='col-lg-12 text-center' >\n                  <hr/>\n\n                      <div>\n                        <img src={'CodeXpert.png'} width=\"200\"/>\n                      </div>\n                  <hr style={{color: 'white', backgroundColor: 'white', height: 0.5}}/>\n\n                  <h1 style={{color : 'red' }}>TRC10 TOKEN DICE GAME</h1>\n                  <hr style={{color: 'white', backgroundColor: 'white', height: 0.5}}/>\n                  <p> Your Address : {this.state.tronwebaddress} </p>\n                  <br/>\n                  <br/>\n                  <p> Paste your contract address here : </p>\n                  <input style={{ width:\"400px\" }} value={this.state.contractAddress} onChange={this.updateContractAddressInput}/>\n                  <br/>\n                  <p> Token name : {this.state.tokenname}</p>\n                  <p> Token Symbol : {this.state.tokensymbol}</p>\n                  <p> Total Supply : {this.state.totalSupply}</p>\n                  <hr style={{color: 'white', backgroundColor: 'white', height: 0.5}}/>\n\n                  <br/>\n                  <br/>\n                  <input style={{ width:\"400px\" }} value={this.state.getbalanceaddress} onChange={this.updateGetBalanceInputValue}/>\n                  <br/>\n                  <br/>\n                  <button className='btn btn-primary' onClick={(event) => {\n                                                                       event.preventDefault()\n                                                                       this.getBalance(this.state.getbalanceaddress)\n                                                                     }  }>Get Balance\n                  </button>\n                  <hr style={{color: 'white', backgroundColor: 'white', height: 0.5}}/>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<button className=\"btn-new\" onClick={(event) => {event.preventDefault()\n                                                        this.init()}  }>Start New game </button>\n\n      <br/>\n      <br/>\n\n      <div className=\"grid-container\">\n        <div className=\"player-0-panel active\">\n          <div className=\"player-name\" id=\"name-0\">Player 1</div>\n          <div className=\"player-score\" >{this.state.score0}</div>\n          <div className=\"player-controls\" >\n\n            <button className=\"btn-roll\" onClick={(event) => {event.preventDefault()\n                                                                  this.roll()}  }><i className=\"fas fa-dice fa-3x\"></i></button>\n\n          </div>\n        </div>\n        <div className=\"player-1-panel\">\n          <div className=\"player-name\" id=\"name-1\">Player 2</div>\n          <div className=\"player-score\">{this.state.score1}</div>\n        </div>\n      </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n                  <br/>\n                  <br/>\n                </div>\n              </div>\n        );\n    }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}